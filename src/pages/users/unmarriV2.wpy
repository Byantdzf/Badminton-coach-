<template>
  <Loading :init.sync="init"></Loading>
  <NavBar title="修改资料"></NavBar>
  <view class="container">
    <view class="orderdata">
      <view class="next text-center">
        <block wx:if="{{avatar}}">
          <image  src="{{avatar}}" class="active_user flo_l" mode="aspectFill" background-size="cover" />
          <button class="btn font_24 flo_l getinfo" open-type="getUserInfo" lang="zh_CN" bindgetuserinfo="onGotUserInfo">从微信获取最新头像</button>
        </block>
        <block wx:else>
          <open-data type="userAvatarUrl"  mode="aspectFit" class="active_user flo_l" ></open-data>
        </block>
        <view  class="btn_red font_26 flo_r" @tap="ensure" style="margin-right:12rpx;width: 180rpx;height: 108rpx;line-height: 108rpx;margin-top: 24rpx;">保存</view>
      </view>
      <view style="height: 20rpx"></view>
      <view class="section list">
        <picker  value="{{sexIndex}}" range="{{sex}}"  @change="sexChange" >
          <view class="picker">
            性别 <span class="red">*</span>
            <text class="text">{{sex[sexIndex]}}</text>
          </view>
        </picker>
      </view>
      <view class="section list">
        <picker mode="date"  value="{{birthday}}"  @change="typing('birthday')">
          <view class="picker">
            出生日期 <span class="red">*</span>
            <text class="text">{{birthday}}</text>
          </view>
        </picker>
      </view>
      <view class="section list">
        <picker  value="{{stateIndex}}" range="{{state}}"  bindchange="stateChange" >
          <view class="picker">
            单身状态 <span class="red">*</span>
            <text class="text">{{state[stateIndex]}}</text>
          </view>
        </picker>
      </view>
      <view  class="list {{StatureFocus || !stature ? 'InputFocus' : ''}}">
        身高 <span class="red">*</span>
        <input type="number" placeholder="输入您的身高（cm）" class="Inp"  @input="typing('stature')" @blur="typing_v2" value="{{stature}}" focus="{{StatureFocus}}"/>
      </view>
      <view  class="list {{WeightFocus || !weight ? 'InputFocus' : ''}}">
        体重 <span class="red">*</span>
        <input type="number" placeholder="输入您的体重（kg）" class="Inp"   @input="typing('weight')" @blur="typing_v2" value="{{weight}}" focus="{{WeightFocus}}"/>
      </view>
      <view  class="list">
        国籍 <span class="red">*</span>
        <input type="text" placeholder="输入您的国籍" class="Inp"  @input="typing('country')" @blur="typing_v2" value="{{country}}" focus="{{countryFocus}}"/>
      </view>
      <view  class="list ">
        <view class="picker">
          常居地 <span class="red">*</span>
          <selectCity :itemIndex.sync="CITY_INDEX" class="flo_r">
            <text class="text" slot="Input">{{region[0]}} / {{region[1]}}</text>
          </selectCity>
        </view>
      </view>
      <view  class="list ">
        <picker  value="{{residentIndex}}" range="{{resident_type}}"  bindchange="resident_typeChange" >
          <view class="picker">
            成长环境 <span class="red">*</span>
            <text class="text">{{resident_type[residentIndex]}}</text>
          </view>
        </picker>
      </view>
      <view  class="list ">
        <view class="picker">
          成长地 <span class="red">*</span>
          <selectCity1 :itemIndex.sync="CITY_INDEX1" class="flo_r">
            <text class="text" slot="Input">{{region_id[0]}} / {{region_id[1]}}</text>
          </selectCity1>
        </view>
      </view>
      <view  class="list ">
        <picker  value="{{degreeIndex}}" range="{{degree}}"  bindchange="degreeChange" >
          <view class="picker">
            最高学历 <span class="red">*</span>
            <text class="text" >{{degree[degreeIndex]}}</text>
          </view>
        </picker>
      </view>
      <view  class="list {{Graduate_schoolFocus || !graduate_school ? 'InputFocus' : ''}}">
        <span class="flo_l">毕业学校 <span class="red">*</span></span>
        <input type="text" placeholder="输入您的学校" class="Inp" @input="typing('graduate_school')" @blur="typing_v2"   value="{{graduate_school}}" focus="{{Graduate_schoolFocus}}" cursor-spacing="50"/>
      </view>
      <view  class="list {{companyFocus || !company ? 'InputFocus' : ''}}">
        <span class="flo_l">工作单位 <span class="red">*</span></span>
        <input type="text" placeholder="公司名称" class="Inp" @input="typing('company')" @blur="typing_v2"  value="{{company}}" focus="{{companyFocus}}" cursor-spacing="50"/>
      </view>
      <view  class="list {{companyFocus || !company ? 'InputFocus' : ''}}">
        <span class="flo_l">公司职位 <span class="red">*</span></span>
        <input type="text" placeholder="公司职位" class="Inp" @input="typing('post')" @blur="typing_v2"  value="{{post}}" cursor-spacing="50"/>
      </view>
      <view  class="list ">
        <picker  value="{{work_sortIndex}}" range="{{work_sort}}"  bindchange="work_sortChange" >
          <view class="picker">
            单位性质 <span class="red">*</span>
            <text class="text" >{{work_sort[work_sortIndex]}}</text>
          </view>
        </picker>
      </view>
      <view  class="list">
        <picker mode="multiSelector" @change="bindMultiPickerChange2" @columnchange="bindMultiPickerColumnChange2" value="{{multiIndex2}}" range="{{objectMultiArray}}" >
          <view class="picker">
            行业 <span class="red">*</span>
            <text class="text ellipsis_1 flo_r text-right" style="width: 80%" wx:if="{{show && industry}}"> {{industry}} / {{industry_sub}}</text>
            <text class="text ellipsis_1 flo_r text-right" style="width: 80%" wx:else>{{objectMultiArray[0][multiIndex2[0]]}} - {{objectMultiArray[1][multiIndex2[1]]}}</text>
          </view>
        </picker>
      </view>
      <view  class="list ">
        <picker  value="{{beliefIndex}}" range="{{belief}}"  bindchange="beliefChange" >
          <view class="picker">
            信仰 <span class="red">*</span>
            <text class="text" >{{belief[beliefIndex]}}</text>
          </view>
        </picker>
      </view>
      <view  class="list {{wechat_idFocus || !wechat_id ? 'InputFocus' : ''}}">
        <span class="flo_l">微信号 <span class="red">*</span></span>
        <input type="text" placeholder="微信号" class="Inp" @input="typing('wechat_id')" @blur="typing_v2"  value="{{wechat_id}}" cursor-spacing="50"/>
      </view>
      <view  class="list {{IntroductionFocus ? 'InputFocus' : ''}} {{!introduction ? 'InputFocus' : ''}}" style="height: 420rpx">
        个人介绍（家庭情况，兴趣爱好，自我评价） <span class="red">*</span>
        <view class="weui-cell">
          <view class="weui-cell__bd" style="border-top: 1rpx solid #d3d3d3;border-bottom: 1rpx solid #d3d3d3;overflow: auto;">
            <textarea class="" @input="typing('introduction')" @blur="typing_v2" adjust-position="true" style="width: 100% !important;" value="{{introduction}}" focus="{{IntroductionFocus}}" />
          </view>
          <!--<view class="font_12" style="text-align: right">限140字</view>-->
        </view>
      </view>
      <view  class="list {{Ideal_mateFocus ? 'InputFocus' : ''}} {{!ideal_mate ? 'InputFocus' : ''}}" style="height: 420rpx">
        理想对象（写下你对另一半的期望） <span class="red">*</span>
        <view class="weui-cell" >
          <!--<view class="weui-cell__bd" >-->
          <textarea class="" @input="typing('ideal_mate')" @blur="typing_v2" adjust-position="true" style="width: 100% !important;border-top: 1rpx solid #d3d3d3;border-bottom: 1rpx solid #d3d3d3;overflow: auto;"  value="{{ideal_mate}}" focus="{{Ideal_mateFocus}}" />
          <!--</view>-->
          <!--<view class="font_12" style="text-align: right">限140字</view>-->
        </view>
      </view>
      <view style="height: 88rpx"></view>
    </view>
  </view>
</template>
<script>
  import wepy from 'wepy'
  import { service } from '../../config.js'
  import http from '../../mixins/http'
  import base from '../../mixins/base'
  import user from '../../mixins/user'
  import ShareMessage from '../../mixins/ShareMessage'
  import NavBar from '../../components/NavBar'
  import Loading from '../../components/loading'
  import selectCity1 from '../../components/selectCity'
  import selectCity from '../../components/selectCity'

  export default class Unmarried extends wepy.page {
    mixins = [base, http, user, ShareMessage]
    components = {NavBar, Loading, selectCity1, selectCity}
    config = {
      navigationBarTitleText: '修改单身资料',
      enablePullDownRefresh: false
    }
    data = {
      init: false,
      sex: ['男', '女'],
      sexIndex: 0,
      state: ['从未结婚', '离异', '丧偶'],
      stateIndex: 0,
      resident_type: ['城市', '乡村'],
      residentIndex: 0,
      degree: ['大专', '本科', '硕士', '博士', '其他'],
      degreeIndex: 0,
      work_sort: ['事业单位', '公务员', '央企', '国企', '私企', '外企'],
      work_sortIndex: 0,
      belief: ['基督教', '佛教', '伊斯兰教', '其他'],
      beliefIndex: 0,
      salary: [],
      salaryIndex: 0,
      car: ['无', '有'],
      carIndex: 0,
      housing: ['无', '有'],
      housingIndex: 0,
      region: ['省', '市', '区'],
      region_id: ['省', '市', '区'],
      CITY_INDEX: 0,
      CITY_INDEX1: 1,
      birthday: '1990-01-01',
      user: {
        avatarUrl: '',
        nickName: '艾丽丝',
        mobile: '15361454427'
      },
      name: '',
      age: '',
      weight: '',
      country: '',
      stature: '',
      graduate_school: '',
      company: '',
      introduction: '',
      ideal_mate: '',
      post: '',
      wechat_id: '',
      objectMultiArray: [],
      Business: [],
      show: true,
      Salaryshow: false,
      avatar: '',  // 头像
      work_text: '',
      WorkShow: false,
      DegreeText: '',
      ShowDegree: false,
      industry: '',
      industry_sub: '',
      multiIndex2: [0, 0],
      salary_id: '',
      salaries: [],
      NameFocus: false,
      AgeFocus: false,
      StatureFocus: false,
      WeightFocus: false,
      countryFocus: false,
      postFocus: false,
      wechat_idFocus: false,
      Graduate_schoolFocus: false,
      companyFocus: false,
      IntroductionFocus: false,
      Ideal_mateFocus: false,
      ShowButton: true,
      color: '#ff9832',
      tempMember: 0 // 是否有可领取会员
    }

    onLoad() {
      this.objectMultiArray = []
      this.getindustry()
      this.getuser()
    }
    onShow() {
      console.log(this.route)
      this.$parent.getTracker(this.$root.$name, '个人信息（单身）修改')
//          let Atanisi = Math.floor(Math.random() * 999999);
//          console.log(this.color = Atanisi);
    }
    getindustry() {
      let that = this
      this.loading = true
      this.$get({url: service.industry}, {
        success: ({code, data}) => {
          let result = data
          that.Business = result
          let IndustryArr = []
          result.forEach(function (item, index, arr) {
            IndustryArr.push(arr[index].title)
          })
          that.objectMultiArray.push(IndustryArr)
          that.objectMultiArray.push(result[0].items)
          that.$apply()
          console.log(that.objectMultiArray)
        },
        fail: ({code, data}) => {
        },
        complete: () => {
          this.loading = false
        }
      })
    }
    getuser() {
      let that = this
      this.loading = true
      this.$get({url: service.profile}, {
        success: ({code, data}) => {
          that.init = true
          let result = data
          that.age = result.age
          that.avatar = result.avatar
          that.weight = result.weight
          that.stature = result.stature
          that.country = result.country
          that.post = result.post
          that.wechat_id = result.wechat_id
          that.graduate_school = result.graduate_school
          that.introduction = result.introduction
          that.ideal_mate = result.ideal_mate
          that.work_text = result.work_sort
          that.DegreeText = result.degree
          if (result.birthday) {
            that.birthday = result.birthday
          }
          that.company = result.company
          if (result.province) {
            that.region[0] = result.province
            that.region[1] = result.city
            that.region[2] = result.dist
          }
          if (result.resident_city) {
            that.region_id[1] = result.resident_city
            that.region_id[0] = result.resident_province
          }
          that.residentIndex = result.resident_type === '城市' ? 0 : 1
          that.degree.forEach((item, index, arr) => {
            if (result.degree == arr[index]) {
              that.degreeIndex = index
            }
          })
          that.work_sort.forEach((item, index, arr) => {
            console.log(arr[index])
            if (result.work_sort == arr[index]) {
              that.work_sortIndex = index
            }
          })
          that.sex.forEach((item, index, arr) => {
            if (result.sex == index + 1) {
              that.sexIndex = index
            }
          })
          that.belief.forEach((item, index, arr) => {
            if (result.belief == arr[index]) {
              that.beliefIndex = index
            }
          })
          that.state.map((item, index, arr) => {
            if (item == result.state) {
              that.stateIndex = index
            }
          })
          that.industry = data.industry
          that.industry_sub = data.industry_sub
          that.$apply()
        },
        fail: ({code, data}) => {
        },
        complete: () => {
          this.loading = false
        }
      })
    }

    ShowModal(text) {
      wx.showToast({
        title: text,
        icon: 'none',
        duration: 1500
      })
    }

    ensureData() {
      let data = {
        birthday: this.birthday,
        company: this.company,
        sex: this.sexIndex == 0 ? 1 : 2,
        stature: this.stature,
        weight: this.weight,
        country: this.country,
        post: this.post,
        wechat_id: this.wechat_id,
        graduate_school: this.graduate_school,
        introduction: this.introduction,
        ideal_mate: this.ideal_mate,
        state: this.state[this.stateIndex],
        province: this.region[0],
        city: this.region[1],
        dist: this.region[2],
        resident_type: this.resident_type[this.residentIndex],
        resident_province: this.region_id[0],
        resident_city: this.region_id[1],
        resident_dist: this.region_id[2],
        degree: this.degree[this.degreeIndex],
        industry: !this.show ? this.objectMultiArray[0][this.multiIndex2[0]] : this.industry,
        industry_sub: !this.show ? this.objectMultiArray[1][this.multiIndex2[1]] : this.industry_sub,
        work_sort: this.work_sort[this.work_sortIndex],
        belief: this.belief[this.beliefIndex]
      }
      this.$put({url: service.courtship + '/v2', data}, {
        success: ({code, data}) => {
          console.log('参数保存成功！')
        },
        fail: ({code, data}) => {
        },
        complete: () => {
        }
      })
    }
    methods = {
      // 更新userinfo
      onGotUserInfo: function(e) {
        console.log(e.detail.errMsg)
        console.log(e.detail.userInfo.avatarUrl)
        console.log(e.detail.rawData)
        this.avatar = e.detail.userInfo.avatarUrl
        let data = {
          avatar: this.avatar
        }
        this.$put({url: service.updateAvatar, data}, {
          success: ({code, data}) => {
            console.log('更新成功')
          },
          fail: ({code, data}) => {
          },
          complete: () => {
          }
        })
      },
      ensure() {
        this.NameFocus = false
        this.AgeFocus = false
        this.StatureFocus = false
        this.WeightFocus = false
        this.Graduate_schoolFocus = false
        this.companyFocus = false
        this.IntroductionFocus = false
        this.Ideal_mateFocus = false
        this.ShowButton = true
        let data = {
//              name: this.name,
          avatar: this.avatar,
          birthday: this.birthday,
          company: this.company,
          sex: this.sexIndex == 0 ? 1 : 2,
//              age: this.age,
          stature: this.stature,
          weight: this.weight,
          country: this.country,
          post: this.post,
          wechat_id: this.wechat_id,
          graduate_school: this.graduate_school,
          introduction: this.introduction,
          ideal_mate: this.ideal_mate,
          state: this.state[this.stateIndex],
          province: this.region[0],
          city: this.region[1],
          dist: this.region[2],
          resident_type: this.resident_type[this.residentIndex],
          resident_province: this.region_id[0],
          resident_city: this.region_id[1],
          resident_dist: this.region_id[2],
          degree: this.degree[this.degreeIndex],
          industry: !this.show ? this.objectMultiArray[0][this.multiIndex2[0]] : this.industry,
          industry_sub: !this.show ? this.objectMultiArray[1][this.multiIndex2[1]] : this.industry_sub,
          work_sort: this.work_sort[this.work_sortIndex],
          belief: this.belief[this.beliefIndex]
        }
        console.log(this.stature)
        if (!this.stature) {
          this.StatureFocus = true
          this.ShowModal('请填写身高（cm）')
        } else if (!this.weight) {
          this.WeightFocus = true
          this.ShowModal('请填写体重（kg）')
        } else if (!this.graduate_school) {
          this.Graduate_schoolFocus = true
          this.ShowModal('请填写毕业学校')
        } else if (!this.company) {
          this.companyFocus = true
          this.ShowModal('请填写工作单位')
        } else if (!this.introduction) {
          this.IntroductionFocus = true
          this.ShowModal('请填写一些自我介绍介绍')
        } else if (!this.ideal_mate) {
          this.Ideal_mateFocus = true
          this.ShowModal('请描绘一下你未来的理想对象')
        } else {
          console.log(data)
          this.$put({url: service.courtship, data}, {
            success: ({code, data}) => {
              wx.showToast({
                title: '保存成功!',
                icon: 'success',
                duration: 800
              })
              this.tempMember = data.can_get_temp_member
              setTimeout(() => {
                if (this.tempMember == 1) {
                  wx.redirectTo({url: '/pages/users/tempMember'})
                } else {
                  if (data.is_rank == 0) {
                    wx.redirectTo({url: '/pages/users/upgradingVIP'})
                  } else {
                    wx.switchTab({url: '/pages/tabBar/user'})
                  }
                }
              }, 800)
            },
            fail: ({code, data}) => {
            },
            complete: () => {
              this.loading = false
            }
          })
        }
      },
      bindMultiPickerChange2(e) {
        console.log(e)
        console.log('picker发送选择改变，携带值为', e.detail.value)
        this.multiIndex2 = e.detail.value
        this.ensureData()
        this.$apply()
      },
      bindMultiPickerColumnChange2(e) {
        let that = this
        // let data = {
        //   objectMultiArray: that.data.objectMultiArray,
        //   multiIndex2: that.data.multiIndex2
        // }
        that.show = false
        that.multiIndex2[e.detail.column] = e.detail.value
        switch (e.detail.column) {
          case 0:
            for (let i = 0; i < that.Business.length; i++) {
              if (that.multiIndex2[0] === i) {
                that.objectMultiArray[1] = that.Business[i].items
              }
            }
            that.multiIndex2[1] = 0
            break
        }
        that.$apply()
      },
      typing(type, e) {
        console.log(e.detail.value)
//            if (this.isDefined(this[type])) {
        this[type] = e.detail.value
        this.ensureData()
        this.$apply()
//            }
      },
      typing_v2(type, e) {
        this.ensureData()
      },
      stateChange(e) {
        this.stateIndex = e.detail.value
        this.ensureData()
      },
      resident_typeChange(e) {
        this.residentIndex = e.detail.value
        this.ensureData()
      },
      cityChange(e) {
        this.region = e.detail.value
        this.ensureData()
      },
      region_idChange(e) {
        this.region_id = e.detail.value
        this.ensureData()
      },
      sexChange(e) {
        this.sexIndex = e.detail.value
        this.ensureData()
      },
      degreeChange(e) {
        this.ShowDegree = true
        this.degreeIndex = e.detail.value
        this.ensureData()
      },
      work_sortChange(e) {
        this.WorkShow = true
        this.work_sortIndex = e.detail.value
        this.ensureData()
      },
      beliefChange(e) {
        this.beliefIndex = e.detail.value
        this.ensureData()
      }
//          salaryChange(e) {
//            console.log(e)
//            console.log(this.salaries)
//            this.Salaryshow = true
//            this.salaryIndex = e.detail.value
//            for (let i = 0; i < this.salaries.length; i++) {
//              if (this.salary[this.salaryIndex] == this.salaries[i].text) {
//                this.salary_id = this.salaries[i].id
//              }
//            }
//          },
//          carChange(e) {
//            this.carIndex = e.detail.value
//          },
//          housingChange(e) {
//            this.housingIndex = e.detail.value
//          }
    }
    events = {
      'selectCity': (value, index) => {
        console.log(value)
        console.log(index)
        if (index == 0) {
          this.region = value
        } else {
          this.region_id = value
        }
        this.$apply()
        this.ensureData()
      }
    }
  }
</script>
<style lang="less">
  page{
    background: #ffffff;
  }
  .active {
    border: 1 rpx solid red
  }

  .display_inlin {
    display: inline-block
  }
  .flo_l{float: left}
  .userinfo{
    width: 100%;
    font-size: 26rpx;
    font-weight: bold;
    box-shadow: 1rpx 1rpx 10rpx #d6d6d6;
    position: fixed;
    left: 0;
    top:0;
    background: white;
    z-index: 10;
  }
  .violet{color: #B22DC3}

  .font_12 {
    font-size: 22 rpx
  }
  .orderdata{
    width: 100%;
    padding:32rpx 0;
  }
  .weui-cell{
    padding: 12rpx 0;
  }
  .list{
    margin-left: 32rpx;
    margin-right: 32rpx;
    height: 72rpx;
    line-height: 72rpx;
    font-size: 28rpx;
    padding-right: 22rpx;
    padding-left: 22rpx;
    margin-bottom: 22rpx;
    border-radius: 6rpx;
    background: #f4f3f9;
    border: 2rpx solid #eeeeee;
  }
  .Inp{
    text-align: right; width: 72%;height: 72rpx;
    float: right;
    /*padding-right: 22rpx;*/
  }
  .text{
    float: right;
    /*margin-right: 82rpx;*/
    font-family: Arial, "Helvetica Neue", Helvetica, sans-serif;
  }
  .next{
    height: 120rpx;
    /*border-top: 1rpx solid #d9d9d9 ;*/
    border-bottom: 1rpx solid #d9d9d9 ;
    z-index: 10;
    width: 100%;
    background: white;
    padding-bottom: 12rpx;
    /*box-shadow: 5rpx 5rpx 12rpx #c2571f;*/
  }
  .InputFocus{
    border: 1px solid red;
  }
  .active_user{
    width: 100rpx;
    height: 100rpx;
    box-shadow: 1rpx 1rpx 12rpx #dedede;
    margin:10rpx 16rpx 10rpx 36rpx;
    border: 4rpx solid white;
  }
  .getinfo{
    margin-top: 66rpx;
    color: #ff9832;
    border: 1rpx solid #ff9832;
    padding: 2rpx 4rpx;
    border-radius: 6rpx;
    box-shadow: 1rpx 1rpx 12rpx #dbdbdb;
    line-height: inherit;
  }
</style>
